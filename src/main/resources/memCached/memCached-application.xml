<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
		
	<!-- 配置客户端 -->
	<bean id="memCachedClient" class="com.danga.MemCached.MemCachedClient">
		<constructor-arg>
			<value>sockIOPool</value>
		</constructor-arg>
	</bean>
	
	<!-- memCached连接池 -->
	<bean id="sockIOPool" class="com.danga.MemCached.SockIOPool" factory-method="getInstance" 
			init-method="initialize" destroy-method="shutDown">
		<constructor-arg>
			<value>sockIOPool</value>
		</constructor-arg>
		<property name="servers">
			<list>
				<value>192.168.2.181:11211</value>
			</list>
		</property>
		<property name="weights">
			<list>
				 <value>1</value>
			</list>
		</property>
		<property name="initConn">  
            <value>20</value>  
        </property>  
        <property name="minConn">  
            <value>10</value>  
        </property>  
        <property name="maxConn">  
            <value>50</value>  
        </property>  
        <property name="nagle">  
            <value>false</value>  
        </property>  
        <property name="socketTO">  
            <value>3000</value>  
        </property>  
	</bean>
	
	<!-- aop 配置 -->
	<bean id="memCachedAop" class="org.java.base.aop.memCached.MemCachedAop"></bean>
	<aop:config>
		<aop:aspect ref="memCachedAop">
			<!-- 环绕通知 -->
			<aop:around method="doAround" pointcut="execution(* org.java..service.*.get*(..))" />
			<!-- 后置通知,如果执行方法抛出异常,doAfterReturn不会执行 -->
			<aop:after-returning method="doAfterReturn" pointcut="execution(* org.java..service.*.modify*(..))" 
			returning="result"/>
			<aop:after-returning method="doAfterReturn" pointcut="execution(* org.java..service.*.delete*(..))"
			returning="result"/>
			<aop:after-returning method="doAfterReturn" pointcut="execution(* org.java..service.*.save*(..))" 
			returning="result"/>
		</aop:aspect>
	</aop:config>
	
	<!-- 配置缓存服务器 -->
	<bean  id="cachedSession" class="org.java.base.session.CachedSession">
		<property name="expiry" value="6000"></property>
	</bean>
	
</beans>
















